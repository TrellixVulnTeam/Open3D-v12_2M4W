# Run from the root Open3D directory:
#
# > GLIBCXX_USE_CXX11_ABI=0
#   - docker build --build-arg GLIBCXX_USE_CXX11_ABI=0 -t open3d-webrtc:abi0 -f 3rdparty/webrtc/Dockerfile.webrtc .
#   - docker run --rm --entrypoint cat open3d-webrtc:abi0 webrtc_60e6748_cxx-abi-0.tar.gz > webrtc_60e6748_cxx-abi-0.tar.gz
# > GLIBCXX_USE_CXX11_ABI=1
#   - docker build --build-arg GLIBCXX_USE_CXX11_ABI=1 -t open3d-webrtc:abi1 -f 3rdparty/webrtc/Dockerfile.webrtc .
#   - docker run --rm --entrypoint cat open3d-webrtc:abi1 webrtc_60e6748_cxx-abi-1.tar.gz > webrtc_60e6748_cxx-abi-1.tar.gz

FROM ubuntu:18.04

# Date: Wed Apr 7 21:35:29 2021 +0000
ARG DEPOT_TOOLS_COMMIT=e1a98941d3ab10549be6d82d0686bb0fb91ec903
# Date: Wed Apr 7 19:12:13 2021 +0200
ARG WEBRTC_COMMIT=60e674842ebae283cc6b2627f4b6f2f8186f3317

# Dependencies
# python*       : resolve ImportError: No module named pkg_resources
# libglib2.0-dev: resolve pkg_config("glib")
RUN apt-get update && apt-get install -y \
    apt-transport-https \
    build-essential \
    ca-certificates \
    git  \
    gnupg \
    libglib2.0-dev \
    python \
    python-pip \
    python-setuptools \
    python-wheel \
    software-properties-common \
    tree \
    wget \
 && rm -rf /var/lib/apt/lists/*

WORKDIR /

# CMake
# Ref: https://apt.kitware.com/
RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null \
    | gpg --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null \
 && apt-add-repository --yes 'deb https://apt.kitware.com/ubuntu/ bionic main' \
 && apt-get update \
 && apt-get --yes install cmake \
 && rm -rf /var/lib/apt/lists/*
RUN which cmake \
 && cmake --version

# Get depot_tools
RUN git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
ENV PATH=/depot_tools:${PATH}
ENV DEPOT_TOOLS_UPDATE=0
RUN which fetch

# Get WebRTC
RUN mkdir webrtc \
 && cd webrtc \
 && fetch webrtc

# Checkout to a specific version
# Ref: https://chromium.googlesource.com/chromium/src/+/master/docs/building_old_revisions.md
RUN cd depot_tools \
 && git checkout ${DEPOT_TOOLS_COMMIT}
RUN cd webrtc/src \
 && git checkout ${WEBRTC_COMMIT} \
 && git submodule update --init --recursive \
 && cd .. \
 && gclient sync -D --force --reset

ADD "https://www.random.org/cgi-bin/randbyte?nbytes=10&format=h" skipcache

# Copy CMake file and patches
# `docker build` should be executed in the Open3D root dir
WORKDIR /
COPY 3rdparty/webrtc/CMakeLists.txt                                         /webrtc
COPY 3rdparty/webrtc/webrtc_common.cmake                                    /webrtc
COPY 3rdparty/webrtc/0001-src-enable-rtc_use_cxx11_abi-option.patch         /webrtc
COPY 3rdparty/webrtc/0001-build-enable-rtc_use_cxx11_abi-option.patch       /webrtc
COPY 3rdparty/webrtc/0001-third_party-enable-rtc_use_cxx11_abi-option.patch /webrtc
WORKDIR /webrtc/src
RUN git apply /webrtc/0001-src-enable-rtc_use_cxx11_abi-option.patch
WORKDIR /webrtc/src/build
RUN git apply /webrtc/0001-build-enable-rtc_use_cxx11_abi-option.patch
WORKDIR /webrtc/src/third_party
RUN git apply /webrtc/0001-third_party-enable-rtc_use_cxx11_abi-option.patch

# Build WebRTC
ARG GLIBCXX_USE_CXX11_ABI=0
WORKDIR /webrtc
RUN mkdir build \
 && cd build \
 && cmake -DCMAKE_INSTALL_PREFIX=/webrtc_release \
          -DGLIBCXX_USE_CXX11_ABI=${GLIBCXX_USE_CXX11_ABI} \
          .. \
 && make -j$(nproc) \
 && make install \
 && tree -L 2 /webrtc_release

# Package WebRTC
WORKDIR /
RUN WEBRTC_COMMIT_SHORT=$(echo ${WEBRTC_COMMIT} | cut -c1-7) \
 && tar -czf webrtc_${WEBRTC_COMMIT_SHORT}_cxx-abi-${GLIBCXX_USE_CXX11_ABI}.tar.gz webrtc_release \
 && ls -alh webrtc_${WEBRTC_COMMIT_SHORT}_cxx-abi-${GLIBCXX_USE_CXX11_ABI}.tar.gz
